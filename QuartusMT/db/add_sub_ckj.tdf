--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=4 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=32 ONE_INPUT_IS_CONSTANT="YES" clock dataa datab result
--VERSION_BEGIN 22.1 cbx_cycloneii 2022:10:25:15:32:10:SC cbx_lpm_add_sub 2022:10:25:15:32:10:SC cbx_mgl 2022:10:25:15:42:35:SC cbx_nadder 2022:10:25:15:32:10:SC cbx_stratix 2022:10:25:15:32:10:SC cbx_stratixii 2022:10:25:15:32:10:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION cyclonev_lcell_comb (cin, dataa, datab, datac, datad, datae, dataf, datag, sharein)
WITH ( DONT_TOUCH, EXTENDED_LUT, LUT_MASK, SHARED_ARITH)
RETURNS ( combout, cout, shareout, sumout);

--synthesis_resources = lut 140 reg 134 
SUBDESIGN add_sub_ckj
( 
	clock	:	input;
	dataa[31..0]	:	input;
	datab[31..0]	:	input;
	result[31..0]	:	output;
) 
VARIABLE 
	add_sub_cell_ffa[31..0] : dffe;
	inter_regrs_cin_ffa[5..0] : dffe;
	pad_cell_ffa[95..0] : dffe;
	add_sub_cella[31..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000000FF0000FF00",
			SHARED_ARITH = "off"
		);
	inter_regrs_cina[5..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000AAAA00005555",
			SHARED_ARITH = "off"
		);
	inter_regrs_couta[5..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000055550000AAAA",
			SHARED_ARITH = "off"
		);
	pad_cella[95..0] : cyclonev_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000000FF0000FF00",
			SHARED_ARITH = "off"
		);

BEGIN 
	add_sub_cell_ffa[].clk = clock;
	add_sub_cell_ffa[].d = add_sub_cella[].sumout;
	inter_regrs_cin_ffa[].clk = clock;
	inter_regrs_cin_ffa[].d = inter_regrs_cina[].sumout;
	pad_cell_ffa[].clk = clock;
	pad_cell_ffa[].d = pad_cella[].sumout;
	add_sub_cella[].cin = ( add_sub_cella[30..24].cout, B"0", add_sub_cella[22..16].cout, B"0", add_sub_cella[14..8].cout, B"0", add_sub_cella[6..0].cout, B"0");
	add_sub_cella[].datad = dataa[];
	add_sub_cella[].dataf = datab[];
	inter_regrs_cina[].cin = ( pad_cella[55].cout, pad_cella[23].cout, pad_cella[15].cout, add_sub_cella[23].cout, add_sub_cella[15].cout, add_sub_cella[7].cout);
	inter_regrs_cina[].dataa = B"111111";
	inter_regrs_couta[].cin = B"000000";
	inter_regrs_couta[].dataa = ( inter_regrs_cin_ffa[5..0].q);
	pad_cella[].cin = ( pad_cella[94..88].cout, inter_regrs_couta[5].cout, pad_cella[86..80].cout, B"0", pad_cella[78..72].cout, B"0", pad_cella[70..64].cout, B"0", pad_cella[62..56].cout, inter_regrs_couta[4].cout, pad_cella[54..48].cout, inter_regrs_couta[3].cout, pad_cella[46..40].cout, B"0", pad_cella[38..32].cout, B"0", pad_cella[30..24].cout, inter_regrs_couta[2].cout, pad_cella[22..16].cout, inter_regrs_couta[1].cout, pad_cella[14..8].cout, inter_regrs_couta[0].cout, pad_cella[6..0].cout, B"0");
	pad_cella[].datad = ( pad_cell_ffa[63..0].q, add_sub_cell_ffa[].q);
	pad_cella[].dataf = B"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	result[31..0] = pad_cell_ffa[95..64].q;
END;
--VALID FILE
