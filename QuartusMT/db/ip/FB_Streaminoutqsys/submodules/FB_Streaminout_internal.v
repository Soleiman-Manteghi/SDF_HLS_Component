// (c) 1992-2021 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 
// Generated by Intel(R) HLS Compiler, Version 21.4.0 Build 53.1

/////////////////////////////////////////////////////////////////
// MODULE FB_Streaminout_internal
/////////////////////////////////////////////////////////////////
module FB_Streaminout_internal
(
   input logic clock,
   input logic resetn,
   // AVST a
   input logic a_valid,
   output logic a_ready,
   input logic [31:0] a_data,
   // AVST b
   output logic b_valid,
   input logic b_ready,
   output logic [31:0] b_data,
   input logic start,
   output logic busy,
   output logic done,
   input logic stall
);
   // INST FB_Streaminout_internal of FB_Streaminout_function_wrapper
   FB_Streaminout_function_wrapper FB_Streaminout_internal
   (
      .clock(clock),
      .resetn(resetn),
      // AVST avst_iord_bl_a
      .avst_iord_bl_a_valid(a_valid),
      .avst_iord_bl_a_ready(a_ready),
      .avst_iord_bl_a_data(a_data),
      // AVST avst_iowr_bl_b
      .avst_iowr_bl_b_valid(b_valid),
      .avst_iowr_bl_b_ready(b_ready),
      .avst_iowr_bl_b_data(b_data),
      .start(start),
      .busy(busy),
      .done(done),
      .stall(stall)
   );

endmodule

